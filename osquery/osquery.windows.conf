{
    "options": {
            "logger_snapshot_event_type": "true",
            "schedule_splay_percent": 10,
            "logger_path": "osquery/log/",
            "pidfile": "osquery/osquery.pidfile",
            "database_path": "osquery/osquery.db",
            "enable_monitor": "true"
    },
    "platform": "windows",
    "schedule": {
        "network_connection": {
            "query": "SELECT DISTINCT process.name, process.path, listening.port, listening.address, process.pid, ia.address as client_ip, h.sha256 FROM interface_addresses ia, processes AS process JOIN listening_ports AS listening ON process.pid = listening.pid JOIN hash h on process.path = h.path WHERE listening.address NOT LIKE '127%' AND listening.protocol = 6 AND ia.interface=13 and ia.type='manual';",
            "interval":15,
            "description": "Finding new processes listening on network ports"
        },
        "network_activity": {
            "query": "select s.pid, p.name,h.sha256, local_address, ia.address as client_ip, remote_address, family, protocol, local_port, remote_port FROM interface_addresses ia, process_open_sockets s join processes p on s.pid = p.pid JOIN hash h on p.path = h.path where remote_port not in (80, 443) and family = 2 AND ia.interface=13 and ia.type='manual' and p.name not in ('python.exe', 'swi_fc.exe');",
            "interval": 15,
            "description": "Finding suspicious outbound network activity - looks for processes with IP traffic to ports not in (80, 443)"
        },
        "powershell_event": {
            "query": "select p.time, p.script_name, p.script_path, h.sha256, p.script_text, ia.address as client_ip FROM interface_addresses ia, powershell_events p JOIN hash h on p.script_path = h.path AND ia.interface=13 and ia.type='manual';",
            "interval": 10,
            "description": "Retrieve events generated by PowerShell."
        },
        "socket_connection": {
            "query": "select processes.name, processes.path, h.sha256, process_open_sockets.remote_address, ia.address as client_ip, process_open_sockets.remote_port FROM interface_addresses ia, process_open_sockets LEFT JOIN processes ON process_open_sockets.pid = processes.pid INNER JOIN hash h on h.path = processes.path WHERE process_open_sockets.remote_port != 0 AND processes.name != '' and processes.name not in ('python.exe', 'swi_fc.exe') AND ia.interface=13 and ia.type='manual';",
            "interval": 20,
            "description": "log socket connections opened by any process."
        },
        "files_written_on_disk": {
            "query": "select f.path, f.filename, f.size, h.sha256, ia.address as client_ip FROM interface_addresses ia, file f, hash h where f.path like 'C:\\Users\\%%' and f.mtime > (select local_time from time) - 100 and f.filename != '.' and h.path = f.path AND ia.interface=13 and ia.type='manual';",
            "interval": 25,
            "description": "Get files written on disk during payload download process"
        },
        "running_process": {
            "query": "select processes.pid, users.username, processes.path, h.sha256, ia.address as client_ip FROM interface_addresses ia, processes LEFT JOIN users ON processes.uid = users.uid INNER JOIN hash h on h.path = processes.path WHERE processes.path != '' AND ia.interface=13 and ia.type='manual';",
            "interval": 10,
            "description": "Get list of running process."
        }
    },
    "packs": {
        "hardware-monitoring": "C:/ProgramData/osquery/packs/hardware-monitoring.conf",
        "incident-response": "C:/ProgramData/osquery/packs/incident-response.conf",
        "unwanted-chrome-extensions": "C:/ProgramData/osquery/packs/unwanted-chrome-extensions.conf",
        "vuln-management": "C:/ProgramData/osquery/packs/vuln-management.conf",
        "it-compliance": "C:/ProgramData/osquery/packs/it-compliance.conf",
        "windows-hardening": "C:/ProgramData/osquery/packs/windows-hardening.conf",
        "windows-attacks": "C:/ProgramData/osquery/packs/windows-attacks.conf"
    }
}